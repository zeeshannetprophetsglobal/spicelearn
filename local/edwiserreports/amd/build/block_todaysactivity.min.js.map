{"version":3,"sources":["block_todaysactivity.js"],"names":["define","$","Chart","cfg","common","init","notifyListner","todaysVisits","panel","getPanel","panelBody","flatpickrCalender","getTodaysActivity","date","loader","show","sesskey","data","ajax","url","requestUrl","type","requestType","dataType","requestDataType","action","JSON","stringify","done","response","each","indx","el","find","html","visitshour","todaysActivityBlock","graph","labels","datasets","label","labelName","backgroundColor","destroy","ctx","options","fail","error","console","log","always","hide","document","ready","getTodaysActivityBlock","flatpickr","dateFormat","maxDate","defaultDate","onChange","selectedDates","dateStr","instance"],"mappings":"AAAA,aAGAA,OAAO,CAAC,SAAU,eAAgB,qCAAsC,YAAa,SAAUC,EAAGC,EAAOC,EAAKC,GAsH5G,MAAO,CACLC,KAlHF,SAAcC,GAEZ,IAAIC,EACAC,EAAQL,EAAIM,SAAS,wBACrBC,EAAYP,EAAIM,SAAS,uBAAwB,QACjDE,EAAoBH,EAAQ,sBAmChC,SAASI,EAAkBC,GAEzBT,EAAOU,OAAOC,KAAK,wBAEnB,IAAIC,EAAUf,EAAEO,GAAOS,KAAK,WAE5BhB,EAAEiB,KAAK,CACLC,IAAKhB,EAAIiB,WACTC,KAAMlB,EAAImB,YACVC,SAAUpB,EAAIqB,gBACdP,KAAM,CACJQ,OAAQ,+BACRT,QAASA,EACTC,KAAMS,KAAKC,UAAU,CACnBd,KAAMA,OAGTe,KAAK,SAAUC,GA0BpB,IAAmCZ,EArB/BhB,EAAE6B,KAAKD,EAASZ,KAAM,SAAUc,EAAMC,GACtB/B,EAAES,EAAY,YAAcqB,GAClCE,KAAK,SAASC,KAAKF,KAmBEf,EAfLY,EAASZ,KAAKkB,WAiB1ChC,EAAIiC,oBAAoBC,MAAMpB,KAAOA,EACrCA,EAAO,CACLqB,OAAQnC,EAAIiC,oBAAoBC,MAAMC,OACtCC,SAAU,CAAC,CACTC,MAAOrC,EAAIiC,oBAAoBC,MAAMI,UACrCxB,KAAMd,EAAIiC,oBAAoBC,MAAMpB,KACpCyB,gBAAiBvC,EAAIiC,oBAAoBC,MAAMK,mBAQ/CnC,GACFA,EAAaoC,UAIfpC,EAAe,IAAIL,EAAMC,EAAIiC,oBAAoBQ,IAAK,CACpDvB,KAAMlB,EAAIiC,oBAAoBC,MAAMhB,KACpCwB,QAAS1C,EAAIiC,oBAAoBC,MAAMQ,QACvC5B,KAAMA,MAtCL6B,KAAK,SAAUC,GAChBC,QAAQC,IAAIF,KACXG,OAAO,WACR5C,EAAc,kBAEdF,EAAOU,OAAOqC,KAAK,0BAhEvBlD,EAAEmD,UAAUC,MAAM,WAChBlD,EAAIiC,oBAAsBjC,EAAImD,yBAE1BnD,EAAIiC,qBACNxB,IAMAX,EAAEU,GAAmB4C,UAAU,CAC7BC,WAAY,QACZC,QAAS,QACTC,YAAa,CAAC,SAEdC,SAAU,SAAkBC,EAAeC,EAASC,GAElDlD,EAAkBiD,OAKtBvD,EAAc","sourcesContent":["/* eslint-disable no-console */\ndefine([\n    'jquery',\n    'core/chartjs',\n    'local_edwiserreports/defaultconfig',\n    './common'\n], function($, Chart, cfg, common) {\n    /**\n     * Initialize\n     * @param {function} notifyListner Callback function\n     */\n    function init(notifyListner) {\n        // Global data got todays activity block\n        var todaysVisits;\n        var panel = cfg.getPanel(\"#todaysactivityblock\");\n        var panelBody = cfg.getPanel(\"#todaysactivityblock\", \"body\");\n        var flatpickrCalender = panel + \" #flatpickrCalender\";\n\n        /**\n         * On document ready do the bellow stuff\n         */\n        $(document).ready(function() {\n            cfg.todaysActivityBlock = cfg.getTodaysActivityBlock();\n\n            // If course progress block is there\n            if (cfg.todaysActivityBlock) {\n                getTodaysActivity();\n                /**\n                 * Generate flatpicker for\n                 * date filter in todays activity block\n                 */\n                $(flatpickrCalender).flatpickr({\n                    dateFormat: \"d M Y\",\n                    maxDate: \"today\",\n                    defaultDate: [\"today\"],\n                    // eslint-disable-next-line no-unused-vars\n                    onChange: function(selectedDates, dateStr, instance) {\n                        // $(panelBody).find(\"loader\").show();\n                        getTodaysActivity(dateStr);\n                    }\n                });\n            } else {\n                /* Notify that this event is completed */\n                notifyListner(\"todaysActivity\");\n            }\n        });\n\n        /**\n         * Get Todays activity information\n         * @param  {number} date Unix Date\n         */\n        function getTodaysActivity(date) {\n\n            // Show loader.\n            common.loader.show('#todaysactivityblock');\n\n            // Get session key\n            var sesskey = $(panel).data(\"sesskey\");\n\n            // Send Ajax call to get todays activity information\n            $.ajax({\n                url: cfg.requestUrl,\n                type: cfg.requestType,\n                dataType: cfg.requestDataType,\n                data: {\n                    action: 'get_todaysactivity_data_ajax',\n                    sesskey: sesskey,\n                    data: JSON.stringify({\n                        date: date\n                    })\n                }\n            })\n                .done(function(response) {\n                    /**\n                     * After getting todays activity information\n                     * update the value in todays activity block\n                     */\n                    $.each(response.data, function(indx, el) {\n                        var section = $(panelBody + \" #todays-\" + indx);\n                        section.find(\".data\").html(el);\n                    });\n\n                    /* Generate Todays Activity Graph */\n                    generateTodaysVisitsGraph(response.data.visitshour);\n                })\n                .fail(function(error) {\n                    console.log(error);\n                }).always(function() {\n                    notifyListner(\"todaysActivity\");\n\n                    // Hide loader.\n                    common.loader.hide('#todaysactivityblock');\n                });\n        }\n\n        /**\n         * Generate Todays Activity Graph\n         * @param  {object} data Todays activity object\n         */\n        function generateTodaysVisitsGraph(data) {\n            // Prepare data for generating graph\n            cfg.todaysActivityBlock.graph.data = data;\n            data = {\n                labels: cfg.todaysActivityBlock.graph.labels,\n                datasets: [{\n                    label: cfg.todaysActivityBlock.graph.labelName,\n                    data: cfg.todaysActivityBlock.graph.data,\n                    backgroundColor: cfg.todaysActivityBlock.graph.backgroundColor\n                }]\n            };\n\n            /**\n             * If Todays Activity graph is already\n             * created then destroy\n             */\n            if (todaysVisits) {\n                todaysVisits.destroy();\n            }\n\n            // Generate Todays Activity Graph\n            todaysVisits = new Chart(cfg.todaysActivityBlock.ctx, {\n                type: cfg.todaysActivityBlock.graph.type,\n                options: cfg.todaysActivityBlock.graph.options,\n                data: data\n            });\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});\n"],"file":"block_todaysactivity.min.js"}